{
  "__type__": "cc.EffectAsset",
  "_name": "wate_effect_material",
  "techniques": [
    {
      "passes": [
        {
          "blendState": {
            "targets": [
              {
                "blend": true
              }
            ]
          },
          "rasterizerState": {
            "cullMode": 0
          },
          "program": "wate_effect_material|vs|fs",
          "properties": {
            "texture": {
              "value": "while",
              "type": 29
            },
            "time": {
              "value": [
                0.5
              ],
              "type": 13
            }
          }
        }
      ]
    }
  ],
  "shaders": [
    {
      "hash": 1857830484,
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n\n  vec4 cc_screenSize;\n\n  vec4 cc_screenScale;\n\n  vec4 cc_nativeSize;\n\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n\n  vec4 cc_exposure;\n\n  vec4 cc_mainLitDir;\n\n  vec4 cc_mainLitColor;\n\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\n\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n\nin vec2 a_uv0;\nout vec2 v_uv0;\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  pos = cc_matViewProj * pos;\n\n  v_uv0 = a_uv0;\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision highp float;\n\nin vec4 v_color;\nin vec2 v_uv0;\n\nuniform sampler2D texture;\nuniform TIME {\n  float time;\n}\n\nfloat waterHighlight(vec2 p, float time, float foaminess)\n{\n  vec2 i = vec2(p);\n  float c = 0.0;\n  float foaminess_factor = mix(1.0, 6.0, foaminess);\n  float inten = .005 * foaminess_factor;\n\n  for (int n = 0; n < 8; n++) \n  {\n    float t = time * (1.0 - (3.5 / float(n+1)));\n    i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n    c += 1.0/length(vec2(p.x / (sin(i.x+t)),p.y / (cos(i.y+t))));\n  }\n  c = 0.2 + c / (inten * float(8));\n  c = 1.17-pow(c, 1.4);\n  c = pow(abs(c), 8.0);\n\n  return c / sqrt(foaminess_factor);\n}\n\nvoid main () {\n  float t = time * 0.1+23.0;\n  vec2 uv = v_uv0.xy;\n  vec2 uv_square = vec2(uv.x, uv.y);\n  float dist_center = pow(2.0*length(uv - 0.5), 2.0);\n  \n  float foaminess = smoothstep(0.4, 1.8, dist_center);\n  float clearness = 0.1 + 0.9*smoothstep(0.1, 0.5, dist_center);\n  \n  vec2 p = mod(uv_square*6.28318530718*1.0, 6.28318530718)-250.0;\n  \n  float c = waterHighlight(p, t, foaminess);\n  \n  vec3 water_color = vec3(0.0, 0.35, 0.5);\n  vec3 color = vec3(c);\n  color = clamp(color + water_color, 0.0, 1.0);\n  \n  color = mix(water_color, color, clearness);\n\n  gl_FragColor = vec4(color, 1.0);\n}\n"
      },
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\n\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  pos = cc_matViewProj * pos;\n\n  v_uv0 = a_uv0;\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision highp float;\n\nvarying vec4 v_color;\nvarying vec2 v_uv0;\n\nuniform sampler2D texture;\nuniform float time;\nfloat waterHighlight(vec2 p, float time, float foaminess)\n{\n  vec2 i = vec2(p);\n  float c = 0.0;\n  float foaminess_factor = mix(1.0, 6.0, foaminess);\n  float inten = .005 * foaminess_factor;\n\n  for (int n = 0; n < 8; n++) \n  {\n    float t = time * (1.0 - (3.5 / float(n+1)));\n    i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n    c += 1.0/length(vec2(p.x / (sin(i.x+t)),p.y / (cos(i.y+t))));\n  }\n  c = 0.2 + c / (inten * float(8));\n  c = 1.17-pow(c, 1.4);\n  c = pow(abs(c), 8.0);\n\n  return c / sqrt(foaminess_factor);\n}\n\nvoid main () {\n  float t = time * 0.1+23.0;\n  vec2 uv = v_uv0.xy;\n  vec2 uv_square = vec2(uv.x, uv.y);\n  float dist_center = pow(2.0*length(uv - 0.5), 2.0);\n  \n  float foaminess = smoothstep(0.4, 1.8, dist_center);\n  float clearness = 0.1 + 0.9*smoothstep(0.1, 0.5, dist_center);\n  \n  vec2 p = mod(uv_square*6.28318530718*1.0, 6.28318530718)-250.0;\n  \n  float c = waterHighlight(p, t, foaminess);\n  \n  vec3 water_color = vec3(0.0, 0.35, 0.5);\n  vec3 color = vec3(c);\n  color = clamp(color + water_color, 0.0, 1.0);\n  \n  color = mix(water_color, color, clearness);\n\n  gl_FragColor = vec4(color, 1.0);\n}\n"
      },
      "builtins": {
        "globals": {
          "blocks": [
            {
              "name": "CCGlobal",
              "defines": []
            }
          ],
          "samplers": []
        },
        "locals": {
          "blocks": [
            {
              "name": "CCLocal",
              "defines": []
            }
          ],
          "samplers": []
        }
      },
      "defines": [],
      "blocks": [
        {
          "name": "TIME",
          "members": [
            {
              "name": "time",
              "type": 13,
              "count": 1
            }
          ],
          "defines": [],
          "binding": 0
        }
      ],
      "samplers": [
        {
          "name": "texture",
          "type": 29,
          "count": 1,
          "defines": [],
          "binding": 30
        }
      ],
      "dependencies": {},
      "name": "wate_effect_material|vs|fs"
    }
  ]
}